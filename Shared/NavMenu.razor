<header>
    <nav class="navbar navbar-expand-lg navbar-dark d-none d-lg-block" style="z-index: 2000;">
        <div class="container-fluid">
            <a class="navbar-brand nav-link" href="/">
                <strong>Futurist</strong>
            </a>
            <button class="navbar-toggler" type="button" data-mdb-toggle="collapse" data-mdb-target="#navbarExample01"
                    aria-controls="navbarExample01" aria-expanded="false" aria-label="Toggle navigation">
                <i class="fas fa-bars"></i>
            </button>
        </div>
    </nav>
    <div id="intro" class="bg-image shadow-2-strong">
        <div class="mask" style="background-color: rgba(0, 0, 0, 0.8);">
            <div class="container d-flex align-items-center justify-content-center text-center h-100">
                <div class="text-white">
                    <h1 class="mb-3">Reading your future</h1>
                    <h5 class="mb-4">Ask me about your future</h5>
                    <div class="row d-flex justify-content-center">
                        <div class="col-md-12">
                            <div class="form-outline mb-4">
                                <input type="text" class="form-control question" placeholder="Type here" @bind-value="question" @onkeydown="@(async (e) => { if (e.Key == "Enter") { await GetAnswerAsync(); } })">
                            </div>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(answer) && !string.IsNullOrEmpty(question))
                    {
                        <p><strong><em>@answer</em></strong></p>
                    }
                        
                </div>
        </div>
    </div>
    </div>
</header>
@code {
    private string? answer;
    private string? question;

    private async Task GetAnswerAsync()
    {
        answer = await predictionService.GetRandomAnswerAsync();
    }
}